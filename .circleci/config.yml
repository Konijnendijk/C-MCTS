version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.1

jobs:
  build_agent:
    docker:
      - image: circleci/buildpack-deps:buster
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.8
      - run:
          name: Build and push build agent docker image
          command: |
            DOCKER_BUILDKIT=1 docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from=konijnendijk/cpp-mcts-build:${CIRCLE_BRANCH} --cache-from=konijnendijk/cpp-mcts-build:master -t konijnendijk/cpp-mcts-build:${CIRCLE_BRANCH} build-agent
            echo "${DOCKERHUB_PASS}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
            docker push konijnendijk/cpp-mcts-build:${CIRCLE_BRANCH}
  build:
    docker:
      - image: konijnendijk/cpp-mcts-build:${CIRCLE_BRANCH}
    steps:
      - checkout
      - conan_build
      - store_test_results:
          path: Testing
  lint:
    docker:
      - image: konijnendijk/cpp-mcts-build:${CIRCLE_BRANCH}
    steps:
      - checkout
      - conan_build:
          build_type: Debug
      - run:
          # TODO fix
          name: Build
          command: build-wrapper-linux-x86-64 --out-dir build-wrapper-output ninja -C build
      - run:
          name: Clang tidy
          command: run-clang-tidy -checks='*' -header-filter='.*' -p build > clang-tidy-report
      - sonarcloud/scan

workflows:
  version: 2.1
  build:
    jobs:
      - build_agent
      - build:
          requires:
            - build_agent
      - lint:
          requires:
            - build

commands:
  conan_build:
    description: "Generate makefiles in a build directory using CMake"
    parameters:
      build_type:
        type: string
        default: "Release"
    steps:
      - restore_cache:
          keys:
            - conan-<< parameters.build_type >>-{{ checksum "conanfile.py" }}
            - conan-<< parameters.build_type >>
      - run:
          name: Conan add Bincrafters remote
          command: conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
      - run:
          name: Conan install
          working_directory: build
          command: conan install --build missing -e CC=clang -e CXX=clang++ -s build_type=<< parameters.build_type >> -s compiler=clang -s compiler.version=7.0 -s compiler.libcxx=libc++ ..
      - save_cache:
          key: conan-<< parameters.build_type >>-{{ checksum "conanfile.py" }}
          when: always
          paths:
            - /root/.conan/data
      - run:
          name: Conan build
          working_directory: build
          command: conan build ..
